{"version":3,"sources":["views/img/wire_terrain.jpg","views/img/contour_terrain.jpg","views/img/convert.jpeg","views/img/fuji_optuna.png","views/img/road_direction.png","views/img/hyogo.jpg","views/img/calabiyau.png","views/img/complex.png","views/articles.js","views/ArticleView.js","App.js","views/All.js","views/Geospatial.js","views/Algorithms.js","views/Three.js","views/Math.js","serviceWorker.js","index.js"],"names":["module","exports","tags","observable","label","color","background","variant","qiita","blog","pages","categories","geospatial","algorithms","three","math","articles","image","complex","title","text","link","tag","category","calabiyau","hyogo","road_direction","fuji_optuna","contour_terrain","convert","wire_terrain","ArticleView","imgHeight","Grid","container","spacing","map","d","i","item","sm","lg","key","Card","CardMedia","component","height","alt","Divider","CardContent","Typography","gutterBottom","CardActions","Button","size","href","target","rel","ColorChip","back","textcolor","styled","Chip","props","routes","path","filter","includes","AppRouter","currentPath","window","location","hash","slice","React","useState","findIndex","value","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","r","Tab","RouterLink","to","MainContainer","exact","Container","attrs","maxWidth","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e12dead9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wire_terrain.13c64da3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contour_terrain.520468bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/convert.b49a2556.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/fuji_optuna.d9da35dc.png\";","module.exports = __webpack_public_path__ + \"static/media/road_direction.d7900014.png\";","module.exports = __webpack_public_path__ + \"static/media/hyogo.3973f275.jpg\";","module.exports = __webpack_public_path__ + \"static/media/calabiyau.0effd921.png\";","module.exports = __webpack_public_path__ + \"static/media/complex.1d7ab3d7.png\";","import wire_terrain from './img/wire_terrain.jpg';\nimport contour_terrain from './img/contour_terrain.jpg';\nimport convert from './img/convert.jpeg';\nimport fuji_optuna from './img/fuji_optuna.png';\nimport road_direction from './img/road_direction.png';\nimport hyogo from './img/hyogo.jpg';\nimport calabiyau from './img/calabiyau.png';\nimport complex from './img/complex.png';\n\n\nexport const tags = {\n  observable: {\n    label: \"observablehq.com\",\n    color: \"#fff\",\n    background: \"#777\",\n    variant: \"default\",\n  },\n  qiita: {\n    label: \"qiita.com\",\n    color: \"#fff\",\n    background: \"#55c500\",\n    variant: \"default\",\n  },\n  blog: {\n    label: \"hatenablog.com\",\n    color: \"#fff\",\n    background: \"#008fde\",\n    variant: \"default\",\n  },\n  pages: {\n    label: \"github.io\",\n    color: \"#555\",\n    background: \"#fff\",\n    variant: \"outlined\"\n  }\n};\n\nexport const categories = {\n  geospatial: {\n    label: \"Geospatial\"\n  },\n  algorithms: {\n    label: \"Algorithms\"\n  },\n  three: {\n    label: \"3D\"\n  },\n  math: {\n    label: \"Math/Stats\"\n  }\n};\n\n\nexport const articles = [\n  {\n    image: complex,\n    title: \"複素関数のカラフルな可視化をPython・JavaScriptで実装する\",\n    text: \"入出力ともに複素数である複素関数はイメージし辛いため、Domain Coloring（定義域の着色）という手法によって可視化した。そもそも関数の可視化がいかなる発想に基づいているかを見直すところから始め、複数言語で実装する方法まで解説した。\",\n    link: \"https://sw1227.hatenablog.com/entry/2018/12/04/090000\",\n    tag: tags.blog,\n    category: [\n      categories.math\n    ],\n  },\n  {\n    image: calabiyau,\n    title: \"Calabi-Yau Manifold 3D\",\n    text: \"Calabi-Yau多様体を3次元空間に射影し、WebGLでインタラクティブに可視化した。\",\n    link: \"https://observablehq.com/@sw1227/calabi-yau-manifold-3d\",\n    tag: tags.observable,\n    category: [\n      categories.three,\n      categories.math\n    ],\n  },\n  {\n    image: hyogo,\n    title: \"兵庫県土の1m精度3次元データをWeb地図上に3D可視化\",\n    text: \"地球表面データ（DSM: Digital Surface Model）に対する前処理を行い、Web地図上に点群として可視化した。WebGL + Deck.glを用いることにより、100万点オーダーでもリアルタイムかつインタラクティブに表示することが可能。\",\n    link: \"https://sw1227.hatenablog.com/entry/2020/03/12/075147\",\n    tag: tags.blog,\n    category: [\n      categories.geospatial,\n      categories.three\n    ],\n  },\n  {\n    image: road_direction,\n    title: \"道路方向を可視化して地域の地理的・社会的特性を理解する\",\n    text: \"道路方向には都市の特徴に関する情報が含まれている点に着目し、Web地図上に可視化を実装した。可視化手法は既存のものを参考にしているが、日本のベクトルタイルを利用して独自に実装した。\",\n    link: \"https://sw1227.hatenablog.com/entry/2018/12/27/150150\",\n    tag: tags.blog,\n    category: [\n      categories.geospatial\n    ],\n  },\n  {\n    image: fuji_optuna,\n    title: \"PFN製の最適化ツール「Optuna」で富士山を登頂する\",\n    text: \"富士登山を「富士山付近の標高を収めた二次元配列に関して、標高が最大値をとるようなインデックスを探索する問題」として捉えることにより、Optunaで山頂を探索した。\",\n    link: \"https://sw1227.hatenablog.com/entry/2018/12/06/071825\",\n    tag: tags.blog,\n    category: [\n      categories.geospatial,\n      categories.algorithms\n    ],\n  },\n  {\n    image: contour_terrain,\n    title: \"Real time contouring & 3D visualization\",\n    text: \"標高タイルからJavaScriptで動的に等高線を生成し、WebGLで立体的に可視化を行った。\",\n    link: \"https://observablehq.com/@sw1227/contoured-mountainious-terrai-3d\",\n    tag: tags.observable,\n    category: [\n      categories.geospatial,\n      categories.three,\n      categories.algorithms\n    ],\n  },\n  {\n    image: convert,\n    title: \"緯度経度と平面直角座標の相互変換をPythonで実装する\",\n    text: \"国土地理院に記載の変換式には単位の混同があるため、正しい式に基づいた実装を示した。\",\n    link: \"https://qiita.com/sw1227/items/e7a590994ad7dcd0e8ab\",\n    tag: tags.qiita,\n    category: [\n      categories.geospatial,\n      categories.math\n    ],\n  },\n  {\n    image: wire_terrain,\n    title: \"Terrain Wireframe\",\n    text: \"地形\",\n    link: \"https://observablehq.com/@sw1227/mountain-terrain-3d\",\n    tag: tags.observable,\n    category: [\n      categories.geospatial,\n      categories.three\n    ],\n  },\n];\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\n\nexport default function ArticleView({ articles, imgHeight = 300 }) {\n  return (\n    <Grid container spacing={3}>\n\n      {articles.map((d, i) => (\n        <Grid item sm={6} lg={4} key={i}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={d.image}\n              height={imgHeight}\n              title={d.title}\n              alt={d.title}\n            />\n            <Divider />\n\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {d.title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {d.text}\n              </Typography>\n            </CardContent>\n\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" href={d.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                Open in new tab\n                <OpenInNewIcon />\n              </Button>\n              {!d.tag ? null : (\n                <ColorChip\n                  size=\"small\"\n                  variant={d.tag.variant}\n                  label={d.tag.label}\n                  back={d.tag.background}\n                  textcolor={d.tag.color}\n                />\n              )}\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n\n    </Grid>\n  );\n};\n\n\nconst ColorChip = styled(Chip)`\n  background-color: ${props => props.back};\n  color: ${props => props.textcolor};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HashRouter as Router, Route, Link as RouterLink } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Container from '@material-ui/core/Container';\n\nimport All from './views/All';\nimport Geo from './views/Geospatial';\nimport Algorithms from './views/Algorithms';\nimport Three from './views/Three';\nimport Math from './views/Math';\n\n\nconst routes = [\n  { path: \"/\", component: All, label: \"All\" },\n  { path: \"/geospatial\", component: Geo, label: \"Geospatial\" },\n  { path: \"/algorithms\", component: Algorithms, label: \"Algorithms\" },\n  { path: \"/three\", component: Three, label: \"3D\" },\n  { path: \"/math\", component: Math, label: \"Math\" },\n];\n\n\nexport default function AppRouter() {\n  // Set selected tab based on hash route\n  const currentPath = window.location.hash.slice(1);\n  const [value, setValue] = React.useState(routes.findIndex(d => d.path === currentPath));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <Router>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n        // aria-label=\"scrollable auto tabs example\"\n        >\n          {routes.map((r, i) => (\n            <Tab label={r.label} component={RouterLink} to={r.path} key={i} />\n          ))}\n        </Tabs>\n      </AppBar>\n\n      <MainContainer>\n        {routes.map((r, i) => (\n          <Route path={r.path} exact component={r.component} key={i} />\n        ))}\n      </MainContainer>\n    </Router>\n  );\n};\n\n\n\nconst MainContainer = styled(Container).attrs(props => ({\n  maxWidth: \"lg\"\n}))`\n  padding-top: 72px;\n  background-color: #f8f8f8;\n`;\n","import React from 'react';\n\nimport { articles } from './articles';\nimport ArticleView from './ArticleView';\n\n\nexport default function All() {\n  return (\n    <ArticleView articles={articles} />\n  );\n};\n","import React from 'react';\n\nimport { articles, categories } from './articles';\nimport ArticleView from './ArticleView';\n\n\nexport default function Geo() {\n\n  return (\n    <ArticleView\n      articles={articles.filter(d => d.category.includes(categories.geospatial))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { articles, categories } from './articles';\nimport ArticleView from './ArticleView';\n\n\nexport default function Algorithms() {\n\n  return (\n    <ArticleView\n      articles={articles.filter(d => d.category.includes(categories.algorithms))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { articles, categories } from './articles';\nimport ArticleView from './ArticleView';\n\n\nexport default function Three() {\n\n  return (\n    <ArticleView\n      articles={articles.filter(d => d.category.includes(categories.three))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { articles, categories } from './articles';\nimport ArticleView from './ArticleView';\n\n\nexport default function Math() {\n\n  return (\n    <ArticleView\n      articles={articles.filter(d => d.category.includes(categories.math))}\n    />\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}